Evaluation of classes notation
===============================

*)	 How is an instantiation of the class new C(e1; ...; em) evaluted?

Answer: The expression arguments e1; ...; em  are evaluated like the arguments of a normal function.
new C(v1; ...; vm), where v1..;vn are the resulting values.

Evaluation of a class with a function
======================================

class C(x1; ...; xm){ 
	
	f ... def f(y1; ...; yn) = b ... 
}
where x1...xn are the class parameters and y1; ...; yn are the function parameters.


*)	How is new C(v1; ...; vm):f(w1; ...; wn) evaluated? 

Answer: The expression new C(v1; ...; vm):f(w1; ...; wn) is rewritten to: 

[w1/y1; ...; wn/yn][v1/x1; ...; vm/xm][new C(v1; ...; vm)/this] b

1) The first function substitution [w1/y1; ...; wn/yn] 
2) The sencond is the classs substitution  [v1/x1; ...; vm/xm]
3) The third substitution is important cos the body of the function can contain a reference to this. 
For that reaosn is the subtitutions is like that [new C(v1; ...; vm)/this] b

For example
===========
new Rational(1, 2).less(new Rational(2, 3))

-->  [1/x,2/y] [newRational(2,3)/that] [new Rational(1,2)/this]

([1/x,2/y] are the arguments) ( new Rational(2, 3) is  [newRational(2,3)/that] as "that" ) ( new Rational(1, 2) is [new Rational(1,2)/this] as "this") 

function body: -->  this.numer * that.denom < that.numer * this.denom
replacing this and that: -->  new Rational(1, 2).numer * new Rational(2, 3).denom < new Rational(2, 3).numer * new Rational(1, 2).denom
--> 1 * 3 < 2 * 2
--> true